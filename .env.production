# Dungeon Production Configuration
# Copy to .env for production deployment: cp .env.production .env

# ============================================================
# Runtime Features
# ============================================================

# Enable game state persistence (REQUIRED for production)
ENABLE_PERSISTENCE=true

# Enable ZK proving (REQUIRED for production - ensures game integrity)
# IMPORTANT: Build guest program first (one-time setup):
#   cargo clean -p zk && cargo build -p zk
# This builds the zkVM guest program (takes 30-60s)
ENABLE_ZK_PROVING=true

# ============================================================
# Persistence Configuration
# ============================================================

# Session identifier
# In production, typically set by deployment system or user selection
# GAME_SESSION_ID=production_game_001

# Save data directory
# Leave unset to use system default:
#   - macOS: ~/Library/Application Support/dungeon
#   - Linux: ~/.local/share/dungeon
#   - Windows: %APPDATA%/dungeon
# Or set custom path for server deployments:
# SAVE_DATA_DIR=/var/lib/dungeon/saves

# Checkpoint interval - balance between safety and performance
# More frequent checkpoints = safer but more disk I/O
CHECKPOINT_INTERVAL=10

# ============================================================
# Logging
# ============================================================

# Log level: error, warn, info, debug, trace
# Use warn or error for production to reduce log volume
RUST_LOG=warn,risc0_zkvm=error

# Critical components can be set to info for monitoring
# RUST_LOG=warn,runtime::workers::prover=info,runtime::workers::persistence=info,risc0_zkvm=warn

# ============================================================
# World Configuration (optional)
# ============================================================

# Map size - larger maps for production games
# CLI_MAP_WIDTH=100
# CLI_MAP_HEIGHT=100

# Action queue buffer - increase for high-concurrency scenarios
# CLI_ACTION_BUFFER=50

# Message log capacity - increase for longer sessions
# CLI_MESSAGE_CAPACITY=200

# ============================================================
# Production Notes
# ============================================================

# Performance considerations:
# - ZK proving is CPU-intensive (~30-60s per proof)
# - Set RISC0_DEV_MODE=1 for faster proving (no real ZK security)
# - Use Metal acceleration on macOS for faster proving
# - Consider running ProverWorker on separate machine for scaling

# Monitoring:
# - Logs location: ~/Library/Caches/dungeon/logs/{session_id}/client.log
# - Monitor with: ./scripts/tail-logs.sh
# - Check sessions: ./scripts/list-sessions.sh

# Backup strategy:
# - Save data is critical - backup regularly
# - Checkpoints allow recovery from crashes
# - Proofs provide cryptographic verification of game state
