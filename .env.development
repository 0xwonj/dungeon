# Dungeon Development Configuration
# Copy to .env for local development: cp .env.development .env

# ============================================================
# Runtime Features
# ============================================================

# Enable game state persistence (recommended for development)
ENABLE_PERSISTENCE=true

# Enable ZK proving (disabled by default - slow first build)
# To enable:
#   1. Build guest program once: cargo clean -p zk && cargo build -p zk
#   2. Uncomment the line below:
# ENABLE_ZK_PROVING=true

# ============================================================
# Persistence Configuration
# ============================================================

# Session identifier (useful for organizing multiple test sessions)
# Leave commented to auto-generate timestamp-based session IDs
# GAME_SESSION_ID=dev_session

# Save data directory - use local directory for easy access during development
SAVE_DATA_DIR=./save_data

# Checkpoint interval - save state every N actions
CHECKPOINT_INTERVAL=10

# ============================================================
# Logging
# ============================================================

# Log level: error, warn, info, debug, trace
# Use info for normal development, debug for troubleshooting
# IMPORTANT: risc0_zkvm=warn prevents TUI interference from zkVM executor logs
RUST_LOG=info,risc0_zkvm=warn

# Module-specific logging (uncomment to debug specific components)
# RUST_LOG=runtime::workers::prover=debug,runtime::workers::persistence=debug,risc0_zkvm=info

# ============================================================
# World Configuration (optional)
# ============================================================

# Map size (default: 30x30)
# CLI_MAP_WIDTH=50
# CLI_MAP_HEIGHT=50

# Action queue buffer size (default: 10)
# CLI_ACTION_BUFFER=20

# Message log capacity (default: 64)
# CLI_MESSAGE_CAPACITY=100

# ============================================================
# Development Notes
# ============================================================

# Quick commands:
# - Monitor logs:     ./scripts/tail-logs.sh
# - List sessions:    ./scripts/list-sessions.sh
# - View save data:   ls -la ./save_data/
# - Clean saves:      rm -rf ./save_data/*
