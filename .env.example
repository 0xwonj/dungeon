# Dungeon Client Configuration Examples
# Copy this file and customize: cp .env.example .env

# ============================================================
# Runtime Features
# ============================================================

# Enable zero-knowledge proof generation
# WARNING: First build is slow (30-60s).
# Default: false
# ENABLE_ZK_PROVING=true

# Enable game state persistence (auto-enabled if proving is on)
# Default: false
# ENABLE_PERSISTENCE=true

# ============================================================
# Persistence Configuration
# ============================================================

# Session identifier for save files
# Default: auto-generated timestamp (e.g., session_1234567890)
# GAME_SESSION_ID=my_session

# Directory for save data
# Default:
#   macOS:   ~/Library/Application Support/dungeon
#   Linux:   ~/.local/share/dungeon (or $XDG_DATA_HOME/dungeon)
#   Windows: %APPDATA%\dungeon
# Override for development (use local directory):
# SAVE_DATA_DIR=./save_data

# Number of actions between automatic checkpoints
# Default: 10
# CHECKPOINT_INTERVAL=20

# ============================================================
# World Configuration
# ============================================================

# Map dimensions
# Default: 30x30
# CLI_MAP_WIDTH=50
# CLI_MAP_HEIGHT=50

# ============================================================
# Runtime Channels
# ============================================================

# Action queue buffer size
# Default: 10
# CLI_ACTION_BUFFER=20

# Message log capacity
# Default: 64
# CLI_MESSAGE_CAPACITY=100

# ============================================================
# Logging
# ============================================================

# Log level filter (error, warn, info, debug, trace)
# Default: info
# RUST_LOG=debug

# Module-specific logging
# RUST_LOG=runtime::workers=debug,game_core=info

# ============================================================
# Development Presets
# ============================================================

# Quick development setup (no persistence, no proving)
# Just run: cargo run -p client-cli

# Full feature development setup (with persistence and proving)
# ENABLE_ZK_PROVING=true
# ENABLE_PERSISTENCE=true
# GAME_SESSION_ID=dev_session
# RUST_LOG=info
